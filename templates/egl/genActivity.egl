package [%= application.manifest.package %];

import be.pds.thesis.*;

import java.util.HashMap;

import android.app.Activity;
import android.view.View;
import android.app.Activity;
import android.os.Bundle;
import android.widget.Button;
import android.widget.TextView;
import android.widget.EditText;

public class [%= activity.name %] extends Activity {

    [% for (c in activity.content) { %]
	private [%= c.type %]Component [%= c %];
    [% } %]

	/** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        [% if (activity.main) { %]
        ServerConnection.getInstance().setHost("[%= server.host %]");
        ServerConnection.getInstance().setPort("[%= server.port %]");
        ServerConnection.getInstance().connect();
        [% } %]
        [% if (activity.presentation.isDefined()) { %]
        setContentView(R.layout.[%= activity.presentation.layout.name %]);
        [% } %]
        [% for (c in activity.content) { %]
			[%= c %] = new [%= c.type %]Component(this);
    	[% } %]
		[% for (c in activity.presentation.layout.layoutType.children) { %]
			[%= c.type %] [%= c %] = ([%= c.type %]) this.findViewById(R.id.[%= c.layoutID %]);
		[% } %]

    	[% if (Trigger.isDefined()) { %]
	    	[% for (t in Trigger.all) { %]
				[%= t.trigger %].setTrigger([%= t.isTriggerOf %]);
				[%= t.isTriggerOf %].isTriggerOf([%= t.trigger %]);

				[% if (t.actions.isDefined() and t.actions.size() > 0) { %]
					HashMap<String, Object> properties = new HashMap<String, Object>();
					[% for (action in t.actions) { %]
						[% if (action.isTypeOf(CallComponentAction)) { %]
						[% for (p in action.properties) { %]
							[%= p.datatype %] [%= p.name %] = "[%= p.value %]";
							properties.put("[%= p.name %]", [%= p.name %]);
						[% } %]
						[% } %]
						[%= action.type %] [%= action %] = new [%= action.type %](properties);
						[%= t.trigger %].addAction([%= action %]);
					[% } %]
				[% } %]
			[% } %]
		[% } %]
    }

	[%
	// generate new classpath file
	var classpath : Template := TemplateFactory.load(basePath+'genClasspath.egl');
	var types : Sequence := Sequence{};
	%]

	[% for (c in activity.content) {
		if (c.isTypeOf(Twitter)) {
			types.add('twitter');
		} else if (c.isTypeOf(Dropbox)) {
			types.add('dropbox');
		}

		var t : Template := TemplateFactory.load(compPath+c.gencodetemplate);
		"generating components".println();
		t.populate('component', c);
		c.gencodetemplate.println();
		t.populate('name', activity.name);
		t.populate('package', application.manifest.package);
		t.populate('path', path);
		t.populate('basePath', basePath);
		t.populate('compPath', compPath);
		t.populate('codePath', codePath);
		t.process();
		t.generate(codePath+'src/' + path + c.type + 'Component.java');
	}

	classpath.populate('types', types);
	classpath.process();
	classpath.generate(codePath+'.classpath');
	%]
	
}
