[% out.setContentType('Java'); %]

[% for (c in component.layoutcomponents) { %]
private [%= c.type %] [%= c %];
[% } %]

private void setup[%= component %]() {    
    [% for (c in component.layoutcomponents) { %]
    [%= c %] = ([%= c.type %]) findViewById(R.id.[%= c.layoutID %]);
    [% } %]
    
    [% if (component.trigger.isDefined()) { %]
    	[% //if (component.trigger.isTypeOf("Button")) { %]
	    [%= component.trigger %].setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				String phoneNo = editPhoneNr.getText().toString();
				String message = editMessage.getText().toString();
				if (phoneNo.length() > 0 && message.length() > 0) {
					sendSMS(phoneNo, message);
				} else {
					Toast.makeText(getBaseContext(), "Please enter both phone number and message.",
							Toast.LENGTH_SHORT).show();
				}
			}
	    });
	    [% //} %]
	[% } %]
}

private void sendSMS(String phoneNumber, String message) {
	String SENT = "SMS_SENT";
	String DELIVERED = "SMS_DELIVERED";
	
	PendingIntent sentPI = PendingIntent.getBroadcast(this, 0,
			new Intent(SENT), 0);
	PendingIntent deliveredPI = PendingIntent.getBroadcast(this, 0,
			new Intent(DELIVERED), 0);
	
	//---when the SMS has been sent---
	registerReceiver(new BroadcastReceiver() {

		@Override
		public void onReceive(Context arg0, Intent arg1) {
			switch (getResultCode()) {
				case Activity.RESULT_OK:
					Toast.makeText(getBaseContext(), "SMS sent",
							Toast.LENGTH_SHORT).show();
					break;
				case SmsManager.RESULT_ERROR_GENERIC_FAILURE:
					Toast.makeText(getBaseContext(), "Generic failure", 
							Toast.LENGTH_SHORT).show();
				    break;
				case SmsManager.RESULT_ERROR_NO_SERVICE:
					Toast.makeText(getBaseContext(), "No service", 
				    		Toast.LENGTH_SHORT).show();
				    break;
				case SmsManager.RESULT_ERROR_NULL_PDU:
					Toast.makeText(getBaseContext(), "Null PDU", 
							Toast.LENGTH_SHORT).show();
				    break;
				case SmsManager.RESULT_ERROR_RADIO_OFF:
					Toast.makeText(getBaseContext(), "Radio off", 
							Toast.LENGTH_SHORT).show();
				    break;
				default:
					Toast.makeText(getBaseContext(), "Fail.", 
							Toast.LENGTH_SHORT).show();
					break;
			}
		}
		
	}, new IntentFilter(SENT));
	
	//---when the SMS has been delivered---
	registerReceiver(new BroadcastReceiver() {

		@Override
		public void onReceive(Context context, Intent intent) {
			switch (getResultCode()) {
				case Activity.RESULT_OK:
					Toast.makeText(getBaseContext(), "SMS delivered",
							Toast.LENGTH_SHORT).show();
					break;
				case Activity.RESULT_CANCELED:
					Toast.makeText(getBaseContext(), "SMS not delivered",
							Toast.LENGTH_SHORT).show();
					break;
			}
		}
		
	}, new IntentFilter(DELIVERED));
	
	SmsManager sms = SmsManager.getDefault();
	sms.sendTextMessage(phoneNumber, null, message, sentPI, deliveredPI);

}
